<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.yogesh.example</groupId>
	<artifactId>SpringRest</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>SpringRest</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- oAuth - Authenticate with Okta with client id and secret -->
		<!-- <dependency>
    		<groupId>com.okta.spring</groupId>
    		<artifactId>okta-spring-boot-starter</artifactId>
    		<version>1.0.0</version>
		</dependency> -->
		<!-- By default user name and password get generated. Also we can setup it in application.properties file-->
		<!-- <dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-security</artifactId>
    	</dependency> -->
		<!-- Filter - DynamicFilter - Not working 
		<dependency>
    		<groupId>com.github.rkonovalov</groupId>
    		<artifactId>json-ignore</artifactId>
    		<version>1.0.9</version>
		</dependency>
		 -->
		<!-- Actuator is to enable the production ready application, which means it provides application monitoring, gathering metrics,state of DB and app.
			URL:http://localhost:8081/browser/index.html#/actuator
		  -->

		<dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-actuator</artifactId>
    	</dependency>

    	<!-- Including HAL within our REST API makes it much more explorable to users as well as being essentially self-documenting -->
		<dependency>
    		<groupId>org.springframework.data</groupId>
    		<artifactId>spring-data-rest-hal-browser</artifactId>
    	</dependency>
    	<!-- Content Negotiation, it means it supports both Json and XML, depends on request header (Accept = application/xml or json) -->
    	<dependency>
		    <groupId>com.fasterxml.jackson.dataformat</groupId>
		    <artifactId>jackson-dataformat-xml</artifactId>
		</dependency>
		<!--By using Swagger Provider can share an URL in which Service Consumer can get to know what are all the API/service available in the provider
			Url:http://localhost:8081/swagger-ui.html
		-->
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger2</artifactId>
		    <version>2.4.0</version>
		</dependency>
		<dependency>
    		<groupId>io.springfox</groupId>
    		<artifactId>springfox-swagger-ui</artifactId>
    		<version>2.4.0</version>
		</dependency>
		<!-- Sharing additional information related to the request from the consumer, i.e Provider can share the additional information like link to items along with the user purchased items response. -->

    	<dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-data-redis</artifactId>
    	</dependency>
    	<dependency>
    		<groupId>redis-clients</groupId>
    		<artifactId>jedis</artifactId>
    		<version>2.9.0</version>
    	</dependency>
    	<dependency>
    		<groupId>org.apache.commons</groupId>
    		<artifactId>commons-pool2</artifactId>
       	</dependency>
		<dependency>
      		<groupId>org.springframework.boot</groupId>
      		<artifactId>spring-boot-starter-hateoas</artifactId>
    	</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
    			<groupId>io.pivotal.spring.cloud</groupId>
    			<artifactId>spring-cloud-services-starter-config-client</artifactId>
    			<version>2.1.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>


</project>



